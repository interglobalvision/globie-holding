{"version":3,"sources":["main.js"],"names":["$","globie","Snap","lefteye","select","leftball","ellipse","attr","righteye","rightball","lenl","document","querySelector","path","getTotalLength","lenr","bbl","getBBox","bbr","midl","x","width","y","height","midr","lpal","getPointAtLength","rpal","mousemove","e","mX","pageX","offset","left","mY","pageY","top","tl","angle","tr","lpalx","lpaly","rpalx","rpaly","isPointInside","cx","cy","keydown","direction","which","ajax","url"],"mappings":"AAAAA,EAAE,WAEA,GAAIC,GAASC,KAAK,WAChBC,EAAUF,EAAOG,OAAO,YACxBC,EAAWJ,EAAOK,QAAQ,IAAK,IAAK,GAAI,IAAIC,SAC5CC,EAAWP,EAAOG,OAAO,aACzBK,EAAYR,EAAOK,QAAQ,IAAK,IAAK,GAAI,IAAIC,SAK7CG,GAJOT,EAAOG,OAAO,eACRO,SAASC,cAAc,WACvBD,SAASC,cAAc,SAE7BV,KAAKW,KAAKC,eAAeX,IAChCY,EAAOb,KAAKW,KAAKC,eAAeX,GAChCa,EAAMd,KAAKW,KAAKI,QAAQd,GACxBe,EAAMhB,KAAKW,KAAKI,QAAQT,GACxBW,GACEC,EAAGJ,EAAII,EAAKJ,EAAIK,MAAQ,EACxBC,EAAGN,EAAIM,EAAKN,EAAIO,OAAS,GAE3BC,GACEJ,EAAGF,EAAIE,EAAKF,EAAIG,MAAQ,EACxBC,EAAGJ,EAAII,EAAKJ,EAAIK,OAAS,GAG3BE,EAAOvB,KAAKW,KAAKa,iBAAiBvB,GAClCwB,EAAOzB,KAAKW,KAAKa,iBAAiBlB,EAGpCR,GAAEW,UAAUiB,UAAU,SAAUC,GAE9BC,GAAKD,EAAEE,MAAQ/B,EAAE,WAAWgC,SAASC,KACrCC,GAAKL,EAAEM,MAAQnC,EAAE,WAAWgC,SAASI,IAErCC,GAAKnC,KAAKoC,MAAMnB,EAAKC,EAAGD,EAAKG,EAAGQ,GAAII,IAAM,IAC1CK,GAAKrC,KAAKoC,MAAMd,EAAKJ,EAAGI,EAAKF,EAAGQ,GAAII,IAAM,IAE1CT,EAAOtB,EAAQuB,iBAAkBW,GAAK3B,EAAQA,GAC9C8B,MAAQf,EAAKL,EACbqB,MAAQhB,EAAKH,EAEbK,EAAOnB,EAASkB,iBAAkBa,GAAKxB,EAAQA,GAC/C2B,MAAQf,EAAKP,EACbuB,MAAQhB,EAAKL,EAGXjB,EAASE,KADPL,KAAKW,KAAK+B,cAAczC,EAAS2B,GAAII,KAErCW,GAAIf,GACJgB,GAAIZ,KAIJW,GAAIL,MACJM,GAAIL,QAKNhC,EAAUF,KADRL,KAAKW,KAAK+B,cAAcpC,EAAUsB,GAAII,KAEtCW,GAAIf,GACJgB,GAAIZ,KAIJW,GAAIH,MACJI,GAAIH,UASV3C,EAAEW,UAAUoC,QAAS,SAASlB,GAC5B,GAAImB,EACJ,QAAOnB,EAAEoB,OACP,IAAK,IACHD,EAAY,MACZ,MAEF,KAAK,IACHA,EAAY,IACZ,MAEF,KAAK,IACHA,EAAY,OACZ,MAEF,KAAK,IACHA,EAAY,MACZ,MAEF,SAAS,OAGXhD,EAAEkD,MACAC,IAAK,yCAA2CH","file":"main.min.js","sourcesContent":["$(function () {\n\n  var globie = Snap(\"#globie\"), // assign svg #globie as Snap object\n    lefteye = globie.select(\"#leftEye\"), // select #leftEye from globie object\n    leftball = globie.ellipse(220, 150, 27, 40).attr({}), // draw left eyeball in globie object\n    righteye = globie.select(\"#rightEye\"), // select #rightEye from globie object\n    rightball = globie.ellipse(280, 150, 27, 40).attr({}), // draw right eyeball in globie object\n    body = globie.select(\"#globieBody\"),\n    globieBody = document.querySelector('#globie'),\n    globieLegs = document.querySelector('#legs'),\n\n    lenl = Snap.path.getTotalLength(lefteye), // get length of left eye path\n    lenr = Snap.path.getTotalLength(lefteye), // get length of right eye path\n    bbl = Snap.path.getBBox(lefteye), // get bounding box of left eye path\n    bbr = Snap.path.getBBox(righteye), // get bounding box of right eye path\n    midl = {\n      x: bbl.x + (bbl.width / 2),\n      y: bbl.y + (bbl.height / 2)\n    }, // find center point of left eye\n    midr = {\n      x: bbr.x + (bbr.width / 2),\n      y: bbr.y + (bbr.height / 2)\n    }, // find center point of right eye\n\n    lpal = Snap.path.getPointAtLength(lefteye), // Returns the (x,y) coordinate in user space which is distance units along the path\n    rpal = Snap.path.getPointAtLength(righteye); // Returns the (x,y) coordinate in user space which is distance units along the path\n\n  // Eyeballs follow cursor\n  $(document).mousemove(function (e) {\n\n    mX = e.pageX - $('#globie').offset().left;\n    mY = e.pageY - $('#globie').offset().top;\n\n    tl = Snap.angle(midl.x, midl.y, mX, mY) / 360;\n    tr = Snap.angle(midr.x, midr.y, mX, mY) / 360;\n\n    lpal = lefteye.getPointAtLength((tl * lenl) % lenl);\n    lpalx = lpal.x;\n    lpaly = lpal.y;\n\n    rpal = righteye.getPointAtLength((tr * lenr) % lenr);\n    rpalx = rpal.x;\n    rpaly = rpal.y;\n\n    if (Snap.path.isPointInside(lefteye, mX, mY)) {\n      leftball.attr({\n        cx: mX,\n        cy: mY\n      });\n    } else {\n      leftball.attr({\n        cx: lpalx,\n        cy: lpaly\n      });\n    }\n\n    if (Snap.path.isPointInside(righteye, mX, mY)) {\n      rightball.attr({\n        cx: mX,\n        cy: mY\n      });\n    } else {\n      rightball.attr({\n        cx: rpalx,\n        cy: rpaly\n      });\n    }\n\n  });\n\n\n  /* KEYS TO MOVE THE CAM */\n\n  $(document).keydown( function(e) {\n    var direction;\n    switch(e.which) {\n      case 37: // left\n        direction = \"left\";\n        break;\n\n      case 38: // up\n        direction = \"up\";\n        break;\n\n      case 39: // right\n        direction = \"right\";\n        break;\n\n      case 40: // down\n        direction = \"down\";\n        break;\n\n      default: return; // exit this handler for other keys\n    }\n\n    $.ajax({\n      url: \"https://ceaajxcodq.localtunnel.me/api/\" + direction,\n    });\n    \n  });\n\n});\n  \n"],"sourceRoot":"/source/"}