{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","Globie","fixWidows","$","window","resize","onResize","each","string","html","replace","globie","Snap","lefteye","select","leftball","ellipse","attr","righteye","rightball","lenl","path","getTotalLength","lenr","bbl","getBBox","bbr","midl","x","width","y","height","midr","lpal","getPointAtLength","rpal","bind","innerWidth","document","mousemove","e","moveEyes","pageX","pageY","DeviceOrientationEvent","addEventListener","onDeviceOrientationChange","event","gamma","beta","innerHeight","posX","posY","mX","offset","left","mY","top","tl","angle","tr","lpalx","lpaly","rpalx","rpaly","isPointInside","cx","cy","jQuery","ready"],"mappings":"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","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global jQuery, $, document, Site, Modernizr, Globie, Snap */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    Globie.init();\n\n    _this.fixWidows();\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nGlobie = {\n  init: function() {\n    var _this = this;\n\n    // assign svg #globie as Snap object\n    var globie = Snap('#globie');\n    // select #leftEye from globie object\n    _this.lefteye = globie.select('#leftEye');\n    // draw left eyeball in globie object\n    _this.leftball = globie.ellipse(220, 150, 27, 40).attr({});\n    // select #rightEye from globie object\n    _this.righteye = globie.select('#rightEye');\n    // draw right eyeball in globie object\n    _this.rightball = globie.ellipse(280, 150, 27, 40).attr({});\n\n    // get length of left eye path\n    _this.lenl = Snap.path.getTotalLength(_this.lefteye);\n    // get length of right eye path\n    _this.lenr = Snap.path.getTotalLength(_this.lefteye);\n    // get bounding box of left eye path\n    _this.bbl = Snap.path.getBBox(_this.lefteye);\n    // get bounding box of right eye path\n    _this.bbr = Snap.path.getBBox(_this.righteye);\n\n    // find center point of left eye\n    _this.midl = {\n      x: _this.bbl.x + (_this.bbl.width / 2),\n      y: _this.bbl.y + (_this.bbl.height / 2)\n    };\n\n    // find center point of right eye\n    _this.midr = {\n      x: _this.bbr.x + (_this.bbr.width / 2),\n      y: _this.bbr.y + (_this.bbr.height / 2)\n    };\n\n    // Returns the (x,y) coordinate in user space which is distance units along the path\n    _this.lpal = Snap.path.getPointAtLength(_this.lefteye);\n    // Returns the (x,y) coordinate in user space which is distance units along the path\n    _this.rpal = Snap.path.getPointAtLength(_this.righteye);\n\n    _this.bind();\n\n  },\n\n  bind: function() {\n    var _this = this;\n\n    // mobile width check to be made does hover exist check\n    if ( window.innerWidth > 720 ) {\n      // Eyeballs follow cursor\n      $(document).mousemove(function (e) {\n        _this.moveEyes(e.pageX, e.pageY);\n      });\n    } else {\n      if(window.DeviceOrientationEvent){\n        window.addEventListener('deviceorientation', _this.onDeviceOrientationChange, false);\n      }\n    }\n\n  },\n\n  onDeviceOrientationChange: function(event) {\n    var _this = this;\n\n    var x = (event.gamma + 90) / 180 * window.innerWidth;\n    var y = (event.beta - 45 + 90) / 180 * window.innerHeight;\n\n    _this.moveEyes(x, y);\n\n  },\n\n  moveEyes: function(posX, posY) {\n    var _this = this;\n\n    var mX = posX - $('#globie').offset().left;\n    var mY = posY - $('#globie').offset().top;\n\n    var tl = Snap.angle(_this.midl.x, _this.midl.y, mX, mY) / 360;\n    var tr = Snap.angle(_this.midr.x, _this.midr.y, mX, mY) / 360;\n\n    var lpal = _this.lefteye.getPointAtLength((tl * _this.lenl) % _this.lenl);\n    var lpalx = lpal.x;\n    var lpaly = lpal.y;\n\n    var rpal = _this.righteye.getPointAtLength((tr * _this.lenr) % _this.lenr);\n    var rpalx = rpal.x;\n    var rpaly = rpal.y;\n\n    if (Snap.path.isPointInside(_this.lefteye, mX, mY)) {\n      _this.leftball.attr({\n        cx: mX,\n        cy: mY\n      });\n    } else {\n      _this.leftball.attr({\n        cx: lpalx,\n        cy: lpaly\n      });\n    }\n\n    if (Snap.path.isPointInside(_this.righteye, mX, mY)) {\n      _this.rightball.attr({\n        cx: mX,\n        cy: mY\n      });\n    } else {\n      _this.rightball.attr({\n        cx: rpalx,\n        cy: rpaly\n      });\n    }\n\n  },\n};\n\njQuery(document).ready(function () {\n  'use strict';\n\n  Site.init();\n\n});"],"sourceRoot":"/source/"}