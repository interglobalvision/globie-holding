{"version":3,"sources":["main.js"],"names":["$","onDeviceOrientationChange","event","x","gamma","window","innerWidth","y","beta","innerHeight","moveEyes","posX","posY","mX","offset","left","mY","top","tl","Snap","angle","midl","tr","midr","lpal","lefteye","getPointAtLength","lenl","lpalx","lpaly","rpal","righteye","lenr","rpalx","rpaly","leftball","attr","path","isPointInside","cx","cy","rightball","globie","select","ellipse","document","querySelector","getTotalLength","bbl","getBBox","bbr","width","height","mousemove","e","pageX","pageY","DeviceOrientationEvent","addEventListener"],"mappings":"AAAAA,EAAE,WAsCA,QAASC,GAA0BC,GAEjC,GAAIC,IAAKD,EAAME,MAAQ,IAAM,IAAMC,OAAOC,WACtCC,GAAKL,EAAMM,KAAO,GAAK,IAAM,IAAMH,OAAOI,WAE9CC,GAASP,EAAEI,GAIb,QAASG,GAASC,EAAMC,GAEtBC,GAAKF,EAAOX,EAAE,WAAWc,SAASC,KAClCC,GAAKJ,EAAOZ,EAAE,WAAWc,SAASG,IAElCC,GAAKC,KAAKC,MAAMC,EAAKlB,EAAGkB,EAAKd,EAAGM,GAAIG,IAAM,IAC1CM,GAAKH,KAAKC,MAAMG,EAAKpB,EAAGoB,EAAKhB,EAAGM,GAAIG,IAAM,IAE1CQ,EAAOC,EAAQC,iBAAkBR,GAAKS,EAAQA,GAC9CC,MAAQJ,EAAKrB,EACb0B,MAAQL,EAAKjB,EAEbuB,EAAOC,EAASL,iBAAkBJ,GAAKU,EAAQA,GAC/CC,MAAQH,EAAK3B,EACb+B,MAAQJ,EAAKvB,EAGX4B,EAASC,KADPjB,KAAKkB,KAAKC,cAAcb,EAASZ,GAAIG,KAErCuB,GAAI1B,GACJ2B,GAAIxB,KAIJuB,GAAIX,MACJY,GAAIX,QAKNY,EAAUL,KADRjB,KAAKkB,KAAKC,cAAcP,EAAUlB,GAAIG,KAEtCuB,GAAI1B,GACJ2B,GAAIxB,KAIJuB,GAAIN,MACJO,GAAIN,QAjFV,GAAIQ,GAASvB,KAAK,WAChBM,EAAUiB,EAAOC,OAAO,YACxBR,EAAWO,EAAOE,QAAQ,IAAK,IAAK,GAAI,IAAIR,SAC5CL,EAAWW,EAAOC,OAAO,aACzBF,EAAYC,EAAOE,QAAQ,IAAK,IAAK,GAAI,IAAIR,SAK7CT,GAJOe,EAAOC,OAAO,eACRE,SAASC,cAAc,WACvBD,SAASC,cAAc,SAE7B3B,KAAKkB,KAAKU,eAAetB,IAChCO,EAAOb,KAAKkB,KAAKU,eAAetB,GAChCuB,EAAM7B,KAAKkB,KAAKY,QAAQxB,GACxByB,EAAM/B,KAAKkB,KAAKY,QAAQlB,GACxBV,GACElB,EAAG6C,EAAI7C,EAAK6C,EAAIG,MAAQ,EACxB5C,EAAGyC,EAAIzC,EAAKyC,EAAII,OAAS,GAE3B7B,GACEpB,EAAG+C,EAAI/C,EAAK+C,EAAIC,MAAQ,EACxB5C,EAAG2C,EAAI3C,EAAK2C,EAAIE,OAAS,GAG3B5B,EAAOL,KAAKkB,KAAKX,iBAAiBD,GAClCK,EAAOX,KAAKkB,KAAKX,iBAAiBK,EAEhC1B,QAAOC,WAAa,IAEtBN,EAAE6C,UAAUQ,UAAU,SAAUC,GAC9B5C,EAAS4C,EAAEC,MAAOD,EAAEE,SAGnBnD,OAAOoD,wBACRpD,OAAOqD,iBAAiB,oBAAqBzD,GAA2B","file":"main.min.js","sourcesContent":["$(function () {\n\n  var globie = Snap(\"#globie\"), // assign svg #globie as Snap object\n    lefteye = globie.select(\"#leftEye\"), // select #leftEye from globie object\n    leftball = globie.ellipse(220, 150, 27, 40).attr({}), // draw left eyeball in globie object\n    righteye = globie.select(\"#rightEye\"), // select #rightEye from globie object\n    rightball = globie.ellipse(280, 150, 27, 40).attr({}), // draw right eyeball in globie object\n    body = globie.select(\"#globieBody\"),\n    globieBody = document.querySelector('#globie'),\n    globieLegs = document.querySelector('#legs'),\n\n    lenl = Snap.path.getTotalLength(lefteye), // get length of left eye path\n    lenr = Snap.path.getTotalLength(lefteye), // get length of right eye path\n    bbl = Snap.path.getBBox(lefteye), // get bounding box of left eye path\n    bbr = Snap.path.getBBox(righteye), // get bounding box of right eye path\n    midl = {\n      x: bbl.x + (bbl.width / 2),\n      y: bbl.y + (bbl.height / 2)\n    }, // find center point of left eye\n    midr = {\n      x: bbr.x + (bbr.width / 2),\n      y: bbr.y + (bbr.height / 2)\n    }, // find center point of right eye\n\n    lpal = Snap.path.getPointAtLength(lefteye), // Returns the (x,y) coordinate in user space which is distance units along the path\n    rpal = Snap.path.getPointAtLength(righteye); // Returns the (x,y) coordinate in user space which is distance units along the path\n\n  if( window.innerWidth > 720 ) {\n    // Eyeballs follow cursor\n    $(document).mousemove(function (e) {\n      moveEyes(e.pageX, e.pageY);\n    });\n  } else {\n    if(window.DeviceOrientationEvent){\n      window.addEventListener(\"deviceorientation\", onDeviceOrientationChange, false);\n    }\n  }\n\n  function onDeviceOrientationChange(event) {\n\n    var x = (event.gamma + 90) / 180 * window.innerWidth;\n    var y = (event.beta - 45 + 90) / 180 * window.innerHeight;\n\n    moveEyes(x,y);\n  }\n\n\n  function moveEyes(posX, posY) {\n\n    mX = posX - $('#globie').offset().left;\n    mY = posY - $('#globie').offset().top;\n\n    tl = Snap.angle(midl.x, midl.y, mX, mY) / 360;\n    tr = Snap.angle(midr.x, midr.y, mX, mY) / 360;\n\n    lpal = lefteye.getPointAtLength((tl * lenl) % lenl);\n    lpalx = lpal.x;\n    lpaly = lpal.y;\n\n    rpal = righteye.getPointAtLength((tr * lenr) % lenr);\n    rpalx = rpal.x;\n    rpaly = rpal.y;\n\n    if (Snap.path.isPointInside(lefteye, mX, mY)) {\n      leftball.attr({\n        cx: mX,\n        cy: mY\n      });\n    } else {\n      leftball.attr({\n        cx: lpalx,\n        cy: lpaly\n      });\n    }\n\n    if (Snap.path.isPointInside(righteye, mX, mY)) {\n      rightball.attr({\n        cx: mX,\n        cy: mY\n      });\n    } else {\n      rightball.attr({\n        cx: rpalx,\n        cy: rpaly\n      });\n    }\n  }\n\n});\n"],"sourceRoot":"/source/"}